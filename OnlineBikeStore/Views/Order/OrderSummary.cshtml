@model OnlineBikeStore.Models.OrderSummaryViewModel
@{
    ViewBag.Title = "OrderSummary";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";
}




<link href="~/Content/Customer/cart.css" rel="stylesheet" />
<div class="parent">
    <div class="container-fluid content-div">
        <div class="row py-3">
            <div class="col-12 col-lg-8 px-2">
                <div class="r-box d-flex align-content-center mb-3" style="padding:10px 0 10px 0; border-bottom:2px solid orange;">
                    <div class="w-100 d-flex justify-content-center">
                        <div>
                            <div>
                                Order Summary
                            </div>
                        </div>
                    </div>

                </div>
                @if (Model.products.Count < 1)
                {
                    <span>Select products to order.</span>
                }

                <div class="r-box d-flex flex-wrap justify-content-between  mb-3" style="padding: 10px 15px 10px 15px;">
                    <div class="d-flex">
                        <div>

                            <div style="max-width:500px">
                                <p>Deliver To</p>
                                @Model.user.first_name @Model.user.city
                            </div>

                        </div>
                    </div>                    
                </div>

                @{
                    decimal totalAmount = 0;
                }

                @*Container for Item list*@
                <div class="r-box" id="item-list">

                    @*Container for each item*@
                    @foreach (var item in Model.products)
                    {
                        <div class="item " style="border-bottom: 1px solid #e6e6e6" id="@item.product_id">
                            <div style="padding: 20px 15px 0px 15px;">
                                <div class=" row">
                                    <div class="col d-flex">
                                        <div class="p-2">
                                            <img src="@Url.Content(item.url)" width="100" />
                                        </div>
                                        <div class="name-price">
                                            <div>
                                                <a>@item.product_name</a>
                                            </div>
                                            <div class="list-price">
                                                Rs. @item.list_price.ToString("N2")
                                            </div>
                                        </div>
                                    </div>
                                    
                                </div>

                            </div>

                        </div>

                        totalAmount += item.list_price;
                    }
                    @*end of Container for each item/*@

                </div>

            </div>

            @*Price details section*@
            <div class="col-12 col-lg-4 px-2">
                <div class="r-box p-4">
                    <div class="">
                        PRICE DETAILS
                        <hr />
                    </div>
                    <div class="d-flex flex-wrap justify-content-between">

                        <p>Price (@Model.products.Count item)</p>
                        <p id="totalAmount">₹@totalAmount</p>

                    </div>
                    <div class="d-flex flex-wrap justify-content-between">
                        @{
                            var discount = (totalAmount) * 15 / 100;
                            var payable = totalAmount - discount;
                        }
                        <p>Discount</p>
                        <p id="discount">-₹@discount</p>

                    </div>
                    <div class="d-flex flex-wrap justify-content-between">

                        <p>Delivery Charges</p>
                        <p>Free</p>

                    </div>
                    <hr />
                    <div class="d-flex flex-wrap justify-content-between">
                        <p><b>Total Payable</b></p>
                        <p id="payable"><b>₹@payable</b></p>
                    </div>
                </div>
                <div class="px-0 mt-2">
                    @using (Html.BeginForm("PlaceOrder", "Order", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        if (Model.products.Count == 1)
                        {
                            <input type="hidden" value="@Model.products.FirstOrDefault().product_id" name="pId" />

                        }

                        <div class="row bg-light m-0">
                            <div class="col-12 px-4 my-2">
                                <p class="fw-bold">Payment Options</p>

                                <label>
                                    <input type="radio" name="payment" value="cod" checked> Cash on Delivery
                                </label><br>

                                <label>
                                    <input type="radio" name="payment" value="upi"> UPI
                                </label><br>

                                <label>
                                    <input type="radio" name="payment" value="card"> Credit Card / Debit Card
                                </label><br>

                                <!-- Cash on Delivery has no input field, so no extra fields for COD -->
                                <!-- UPI input field -->
                                <div id="upiField" class="payment-input" style="display:none;">
                                    <label for="upiId" class="text-muted">Enter UPI ID:</label>
                                    <input type="text" id="upiId" name="upiId" placeholder="example@upi">
                                </div>

                                <!-- Credit/Debit Card input fields -->
                                <div id="cardFields" class="payment-input" style="display:none;">
                                    <table>
                                        <tr>
                                            <td><label class="text-muted" for="cardNumber">Card Number:</label></td>
                                            <td> <input class="form-control" type="text" id="cardNumber" name="cardNumber" placeholder="1234 5678 9012 3456"><br></td>
                                        </tr>
                                        <tr>
                                            <td>  <label class="text-muted" for="expiryDate">Expiry Date:</label></td>
                                            <td> <input class="form-control" type="text" id="expiryDate" name="expiryDate" placeholder="MM/YY"><br></td>
                                        </tr>
                                        <tr>
                                            <td> <label class="text-muted" for="cvv">CVV:</label></td>
                                            <td>  <input class="form-control" type="text" id="cvv" name="cvv" placeholder="123"><br></td>
                                        </tr>
                                    </table>
                                </div>

                            </div>

                        </div>
                        <div class="row m-0">
                            <div class="col-12  mb-4 p-0">
                                <div class="">
                                    <input type="submit" value="PLACE ORDER" class="btn btn-sm btn-primary w-100" style="text-decoration:none">

                                </div>

                            </div>
                        </div>
                    }

                </div>
            </div>

        </div>
    </div>
</div>

<script>

    function RemoveItem(productId) {
        $.ajax({
            url: "@Url.Action("RemoveFromCart","Cart")",
            type: "POST",
            data: { productId: productId },
            success: function (response) {
                if (response.success) {
                    // Remove the item from the DOM
                    $('#' + productId).remove();

                    var totalAmount = 0;

                    $('.list-price').each(function () {
                        var price = parseFloat($(this).text());
                        totalAmount += price;
                    });

                    var discount = (totalAmount * 10) / 100;
                    var payable = totalAmount - discount;

                    $('#totalAmount').text("₹"+totalAmount.toFixed(2));
                    $('#discount').text("-₹"+discount.toFixed(2));
                    $('#payable').text("₹"+payable.toFixed(2));

                    // If there are no items left, display empty cart message
                    if ($('#item-list .item').length === 0) {
                        $('#item-list').html('<span>Your cart is Empty!</span>');
                    }
                } else {
                    console.error(response.message);
                }
            },
            error: function () {
                console.error("Error removing item.");
            }
        })
    }
    $(document).ready(function () {
        // When a radio button is clicked
        $('input[name="payment"]').on('change', function () {
            var selectedPayment = $(this).val();

            // Hide all input fields first
            $('.payment-input').hide();

            // Show the corresponding input fields based on the selected payment method
            if (selectedPayment === 'upi') {
                $('#upiField').show();
            } else if (selectedPayment === 'card') {
                $('#cardFields').show();
            }
        });

        // Trigger the change event on page load to show the correct input fields
        $('input[name="payment"]:checked').trigger('change');
    });

</script>